name: CI

#1
# Controls when the workflow will run
on:
  push:
    branches: [main]

  #Allows you to run this workflow manually from the Action tab
  workflow_dispatch:

#2https://registry.digitalocean.com/cybercityregistry/umwelt
env:
  REGISTRY: "registry.digitalocean.com/cybercityregistry"
  IMAGE_NAME_FR: "umwelt_fr:latest"
  IMAGE_NAME_BA: "umwelt_ba:latest"

#3
jobs:
  build_and_push_frontend:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout to repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME_FR) ./public/

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME_FR)

  build_and_push_backend:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout to repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME_BA) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_ACCESS }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME_BA)
  deploy:
    runs-on: ubuntu-20.04
    needs: 
      - build_and_push_frontend
      - build_and_push_backend

    steps:
      - name: Stop running docker
        uses: appleboy/ssh-action@v0.1.3
        continue-on-error: true
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER}}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: REGISTRY,{{ secrets.DO_ACCESS }},GITHUB_SHA
          script: |
            # Stop docker
            docker-compose stop
            
      - name: Start docker (deploy this)
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER}}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DO_ACCESS }},GITHUB_SHA
          script: |
            # Start docker
            cd ~/docker
            docker-compose pull
            docker-compose up -d --force-recreate
